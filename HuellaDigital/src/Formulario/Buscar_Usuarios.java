/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formulario;

import BD.ConexionBD;
import BD.Metodos_Rut;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sql.rowset.CachedRowSet;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Crecic_Estudiante
 */
public class Buscar_Usuarios extends javax.swing.JDialog {
    
    ConexionBD cn = new ConexionBD();
    DefaultTableModel modelo;
    JButton bt_datos = new JButton("seleccionar");

    /**
     * Creates new form Buscar_Usuarios
     */
    public Buscar_Usuarios() {
        initComponents();
        iniciar_tabla();
        agregar_icono();
        cerrar();
        System.out.println("inicio  buscar usuarios ");
        
    }
    
    public void iniciar_tabla() {
        /*tabla*/
        tb_prueba.setDefaultRenderer(Object.class, new Render());
        String columna[] = new String[]{"Rut", "Nombres"};
        Object datos[][] = {};
        modelo = new DefaultTableModel(datos, columna);
        tb_prueba.setModel(modelo);
        agregar_datos();
    }
    
    public void actualizar_tabla(Object datos[]) {
        String columna[] = new String[]{"Rut", "Nombres"};
        Object dat[][] = {};
        modelo = new DefaultTableModel(dat, columna);
        tb_prueba.setModel(modelo);
        modelo.addRow(datos);
    }
    
    public void agregar_icono() {
        /*icono*/
        setIconImage(new ImageIcon(getClass().getResource("/img/logoCrecic.jpg")).getImage());
        setTitle("Crecic S.A");
    }
    
    public void agregar_datos() {
        try {
            //Conectar a PostgreSQL\\
            Connection c = cn.conectar();
            PreparedStatement crs = c.prepareStatement("SELECT rut, nombres ||' '|| apellido_paterno ||' '||apellido_materno FROM municipalidad.maestra_contribuyente");
            ResultSet rs = crs.executeQuery();
            Object datos[] = new Object[2]; //Numero de columnas de la tabla
            String rut;
            try {
                while (rs.next()) {
                    for (int i = 0; i < 2; i++) {
                        if (i == 0) {
                            rut = rs.getString("rut");
                            bt_datos = new JButton(rut);
                            bt_datos.setName(rut);
                            datos[i] = bt_datos;
                        }
                        if (i == 1) {
                            datos[i] = rs.getObject(i + 1);
                        }
                    }
                    
                    modelo.addRow(datos);
                }
                
                crs.close();
            } catch (Exception e) {
            }
        } catch (SQLException ex) {
            Logger.getLogger(Buscar_Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb_prueba = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tx_rut = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tx_nombre = new javax.swing.JTextField();
        bt_rut = new javax.swing.JButton();
        bt_nombre = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(214, 226, 249));

        tb_prueba.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tb_prueba.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_pruebaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_prueba);

        jLabel1.setText("Rut:");

        jLabel2.setText("Nombre:");

        bt_rut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busca_blanco.PNG"))); // NOI18N
        bt_rut.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bt_rut.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busca_azul.PNG"))); // NOI18N
        bt_rut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_rutActionPerformed(evt);
            }
        });

        bt_nombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busca_blanco.PNG"))); // NOI18N
        bt_nombre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bt_nombre.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busca_azul.PNG"))); // NOI18N
        bt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_nombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tx_rut, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_rut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tx_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_rut)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bt_nombre)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tx_rut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(tx_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_rutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_rutActionPerformed
        try {
            //Conectar a PostgreSQL\\
            Connection c = cn.conectar();
            PreparedStatement crs = c.prepareStatement("SELECT rut, nombres ||' '|| apellido_paterno ||' '|| apellido_materno FROM municipalidad.maestra_contribuyente WHERE rut=?");
            String rut = tx_rut.getText().trim();
            String rut_form = Metodos_Rut.formatear(rut);
            crs.setString(1, rut_form);
            ResultSet rs = crs.executeQuery();
            Object datos[] = new Object[2]; //Numero de columnas de la tabla

            try {
                while (rs.next()) {
                    for (int i = 0; i < 2; i++) {
                        if (i == 0) {
                            rut = rs.getString("rut");
                            bt_datos = new JButton(rut);
                            bt_datos.setName(rut);
                            datos[i] = bt_datos;
                        }
                        if (i == 1) {
                            datos[i] = rs.getObject(i + 1);
                        }
                    }
                    
                    actualizar_tabla(datos);
                }
                if (rut.isEmpty()) {
                    iniciar_tabla();
                }
                crs.close();
            } catch (Exception e) {
            }
        } catch (SQLException ex) {
            Logger.getLogger(Buscar_Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_rutActionPerformed

    private void tb_pruebaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_pruebaMouseClicked
        // TODO add your handling code here:
        int column = tb_prueba.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / tb_prueba.getRowHeight();
        
        if (row < tb_prueba.getRowCount() && row >= 0 && column < tb_prueba.getColumnCount() && column >= 0) {
            Object value = tb_prueba.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;
                
                System.out.println("Click en el boton seleccionar");
                System.out.println(boton.getName().trim().toString());
                CapturaHuella app = new CapturaHuella();
                app.jTextField1.setText(boton.getName().trim());
                app.stop();
                app.setVisible(true);
                this.setVisible(false);
                
            }
        }
    }//GEN-LAST:event_tb_pruebaMouseClicked

    private void bt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_nombreActionPerformed
        // TODO add your handling code here:
        try {
            //Conectar a PostgreSQL\\
            Connection c = cn.conectar();
            PreparedStatement crs = c.prepareStatement("SELECT rut, nombres ||' '||apellido_paterno||' '||apellido_materno FROM municipalidad.maestra_contribuyente WHERE nombres ||' '||apellido_paterno||' '||apellido_materno ILIKE  ? ");
            String nom = tx_nombre.getText();
            crs.setString(1, "%" + nom + "%");
            ResultSet rs = crs.executeQuery();
            Object datos[] = new Object[2];
            String rut = " ";
            try {
                while (rs.next()) {
                    for (int i = 0; i < 2; i++) {
                        if (i == 0) {
                            rut = rs.getString("rut");
                            bt_datos = new JButton(rut);
                            bt_datos.setName(rut);
                            datos[i] = bt_datos;
                        }
                        if (i == 1) {
                            datos[i] = rs.getObject(i + 1);
                        }
                    }
                    
                    actualizar_tabla(datos);
                }
                if (nom.isEmpty()) {
                    iniciar_tabla();
                }
                crs.close();
            } catch (Exception e) {
            }
        } catch (SQLException ex) {
            Logger.getLogger(Buscar_Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_nombreActionPerformed
    
    public void cerrar() {        
        try {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowsClosing(WindowEvent e){ new CapturaHuella().setVisible(true); }
        });this.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
 
        
    }   
    public void confirmarSalida(){
        
        int op = JOptionPane.showConfirmDialog(this, "No modifique estos parametros al menos que se requiera.\n"
                + "¿Desea configurar?", "¿Desea configurar?", JOptionPane.YES_NO_CANCEL_OPTION );
        if (op == JOptionPane.OK_OPTION) {
            //  Ingreso in=new Ingreso(this, true);
            try {
                new CapturaHuella().setVisible(true);
              

            } catch (Exception ex) {
                Logger.getLogger(CapturaHuella.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
  
 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        Buscar_Usuarios obj1 = new Buscar_Usuarios();
//        obj1.setVisible(true);

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buscar_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buscar_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buscar_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buscar_Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Buscar_Usuarios dialog = new Buscar_Usuarios();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                        
                    }
                });
                dialog.setVisible(true);
                 new CapturaHuella().setVisible(true); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_nombre;
    private javax.swing.JButton bt_rut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_prueba;
    private javax.swing.JTextField tx_nombre;
    private javax.swing.JTextField tx_rut;
    // End of variables declaration//GEN-END:variables
}
